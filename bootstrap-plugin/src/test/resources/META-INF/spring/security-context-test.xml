<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:security="http://www.springframework.org/schema/security"
	xsi:schemaLocation="
			http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
			http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security.xsd"
	default-autowire="byName">

	<security:http auto-config="true" entry-point-ref="http403ForbiddenEntryPoint" create-session="stateless">
		<security:access-denied-handler />
		<security:intercept-url pattern="/rest" access="permitAll" /><!-- WADL access -->
		<security:intercept-url pattern="/**" access="isFullyAuthenticated()" />
		<security:custom-filter position="PRE_AUTH_FILTER" ref="apiTokenFilter" />
		<security:custom-filter position="LAST" ref="authorizingFilter" />
		<security:csrf disabled="true" />
	</security:http>

	<security:global-method-security secured-annotations="enabled" jsr250-annotations="enabled" />

	<security:authentication-manager alias="authentication-manager" erase-credentials="true">
		<security:authentication-provider ref="authenticationProvider" />
	</security:authentication-manager>

	<bean id="apiTokenFilter" class="org.ligoj.bootstrap.core.security.ApiTokenAuthenticationFilter">
		<property name="principalRequestHeader" value="SM_UNIVERSALID" />
		<property name="credentialsRequestHeader" value="X-api-key" />
		<property name="authenticationManager" ref="authentication-manager" />
		<property name="exceptionIfHeaderMissing" value="false" />
		<property name="continueFilterChainOnUnsuccessfulAuthentication" value="false" />
	</bean>

	<bean id="authorizingFilter" class="org.ligoj.bootstrap.core.security.AuthorizingFilter"/>
	<bean name="http403ForbiddenEntryPoint" class="org.springframework.security.web.authentication.Http403ForbiddenEntryPoint" />
	<bean name="authenticationProvider" class="org.springframework.security.web.authentication.preauth.PreAuthenticatedAuthenticationProvider">
		<property name="preAuthenticatedUserDetailsService" ref="authentication-user-service" />
	</bean>
	<bean id="authentication-user-service" class="org.springframework.security.core.userdetails.UserDetailsByNameServiceWrapper">
		<property name="userDetailsService" ref="rbacUserDetailsService" />
	</bean>
</beans>
